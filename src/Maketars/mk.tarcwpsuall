########
#	mk.file for making the cwp_su_allxx_tar.Z		
#		make -f mk.tarcwpsuall
#

SHELL = /bin/sh

# Define the root directory
ROOT=/usr/local/cwp
SRC=$(ROOT)/src
BIN=$(ROOT)/bin
MKTARS=$(SRC)/Maketars
SCRATCH=/Users/john/scratch/john/Temp
TARDIR=$(MKTARS)/Tarfiles
RELEASE=44R28
TARNAME=Free/cwp_su_all_$(RELEASE).tgz

# TMPDIR is the directory where we put the files in a single standalone tree
# NOTE: We destroy any existing directory
TMPCWP	=	$(SCRATCH)/cwp_su_all_temp
TMPDIR	=	$(TMPCWP)/src

#all	: warn update destroy copy prune copyright tar cleanup
#all	: destroy copy prune copyright tar 
all	: warn destroy copy prune tar  cleanup

warn	:
	@echo
	@echo
	@echo "This will take about 30 minutes ..."
	@echo "If you haven't pinged virgil...."
	@echo ".... stop this make and do so, now!!!"
	

# Update the documentation and the X windows codes.
update	:
	$(MKTARS)/Update_X
	$(BIN)/updatedocall

# destroy any existing directory
destroy:
	-rm -rf $(TMPDIR)
	cd $(SRC)/Complex ; make clean
	cd $(SRC)/demos ; ./Clean.sh
	cd $(SRC)/3D ; sh ./Clean.sh
	cd $(SRC)/Sfio ; make clean

# copy all of the codes to
copy	:
	-mkdir $(TMPCWP)
	-mkdir $(TMPDIR)
	-cd $(TMPDIR) ; tar cvf - \
		-C $(SRC) \
		LEGAL_STATEMENT \
		ACKNOWLEDGEMENTS \
		Installation_Instructions \
		Check \
		configs	\
		contents \
		developer_tools	\
		Rules Refl PVM 3D \
		install.successful \
		Portability chkroot.sh license.sh\
		mailhome.sh Makefile Makefile.config \
		mkdirectories.sh cwp par doc cwputils Mathematica \
		Fortran Sfio  \
		sfio_15_Sept_2021.tgz \
		demos LEGAL_STATEMENT faq Complex comp \
		tetra tri xtri Trielas \
		psplot xplot Xtcwp Xmcwp su/Makefile Mesa \
		su/include su/main su/lib \
		su/shell su/examples su/Portability \
		su/graphics/xplot su/graphics/psplot \
		su/graphics/OldPortability \
		su/graphics/Makefile \
		Third_Party | tar -xf -

# Prune away the RCS and proprietary directories and some junk things
prune:
	find $(TMPDIR) -name RCS -type d -print -prune -exec rm -rf {} \;
	find $(TMPDIR) -name prop -type d -print -prune -exec rm -rf {} \;
	find $(TMPDIR) -name Idle -type d -print -prune  -exec rm -rf {} \;
	find $(TMPDIR) -name .dir\* -print -exec rm -rf {} \;
	find $(TMPDIR) -name .swp\* -print -exec rm -rf {} \;
	find $(TMPDIR) -name .index -print  -exec rm -rf {} \;
	find $(TMPDIR) -name .places -print -exec rm -rf {} \;
	find $(TMPDIR) -name .dir.\*wmd -print -exec rm -rf {} \;
	find $(TMPDIR) -name INSTALL -print -exec rm -rf {} \;
	find $(TMPDIR) -name \*.a -print -exec rm -rf {} \;
	find $(TMPDIR) -name \*.o -print -exec rm -rf {} \;
	find $(TMPDIR) -name junk\* -print -prune -exec rm -rf {} \;
	find $(TMPDIR) -name core -print -prune -exec rm -rf {} \;
	find $(TMPDIR) -name OldPortability -print -prune -exec rm -rf {} \;
	find $(TMPDIR) -name \*.bak -print -prune -exec rm -rf {} \;
	find $(TMPDIR) -name \*.old -print -prune -exec rm -rf {} \;
	find $(TMPDIR) -name \*.orig -print -prune -exec rm -rf {} \;
	find $(TMPDIR) -name \*.hold -print -prune -exec rm -rf {} \;
	find $(TMPDIR) -name \*.tmp -print -prune -exec rm -rf {} \;
	find $(TMPDIR) -name \*.temp -print -prune -exec rm -rf {} \;
	find $(TMPDIR) -type d -name test -print -prune -exec rm -rf {} \;
	find $(TMPDIR) -type d -name Test -print -prune -exec rm -rf {} \;
	find $(TMPDIR) -type f -name \*~ -print -exec rm -f {} \;

	-rm -f $(TMPDIR)/su/include/mkheader
	-rm -f $(TMPDIR)/su/include/mkxdrhdrsub
	-rm -f $(TMPDIR)/su/include/mkxdrbhdrsub
	-rm -f $(TMPDIR)/su/include/mkhdr
	-rm -f $(TMPDIR)/su/include/header.h
	-rm -f $(TMPDIR)/su/include/mkhdr.h
	-rm -f $(TMPDIR)/su/include/prehdr.h
	-rm -f $(TMPDIR)/su/include/offsets.h
	-rm -f $(TMPDIR)/su/lib/xdrhdrsub.c
	-rm -f $(TMPDIR)/su/lib/xdrbhdrsub.c

	-rm -f $(TMPDIR)/cwp_su_version

# Change mod so that the codes are writable for the user
	cd $(TMPDIR) ; chmod -R ug+rw * 

# put CSM copyright statement in each code
copyright	:
	-rm -rf $(TMPDIR)/Sfio
	-mv $(TMPDIR)/src/Sfio $(TMPDIR)
	-cd $(TMPDIR) ; $(BIN)/copyright
	-mv $(TMPDIR)/Sfio $(TMPDIR)/src
	-rm -rf $(TMPDIR)/Sfio

# tar up the code and deposit in $(TARDIR)
tar	:
	find $(TMPDIR) -name .nfs\* -print -exec rm -rf {} \;
	find $(TMPDIR) -name core\* -print -exec rm -rf {} \;
	cd $(TMPDIR)/.. ; tar cf - ./src | gzip > $(TARDIR)/$(TARNAME)

# clean up
cleanup	:
	-rm -rf $(TMPDIR)
